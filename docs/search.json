[
  {
    "objectID": "sources.html",
    "href": "sources.html",
    "title": "Useful Resources",
    "section": "",
    "text": "Python\n\nW3Schools: A great starting point for beginners with Python basics and simple examples.\nReal Python: Comprehensive tutorials and advanced topics for a deeper dive into the language.\n\n\n\n\nSoftware Development\n\nW3Schools Git Tutorial: An easy-to-follow introduction to the fundamentals of version control with Git.\n\n\n\n\nData Science\n\nTowards Data Science :A collection of articles, tutorials, and guides on data analysis, machine learning, and AI.\n\n\n\n\nYouTube Channels\n\n3Blue1Brown: Visual explanations and animations that make complex math and scientific concepts intuitive.\nFireship: High-intensity code tutorials and tech news.\n\n\n\nVisualisations\n\nThe Wall Street journal guide to information graphics: Dos and dont’s of presenting data, facts and figures."
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html",
    "href": "hs25/lia1/lia1_notes.html",
    "title": "Linear Algebra 01",
    "section": "",
    "text": "Linear algebra is the theory of linear mappings between vector spaces. Broadly, it’s the theory of certain linear data transformations or manipulations. The main actors are vectors and matrices.\n\n\nA vector \\(\\overrightarrow{a}\\) is data of a number (or magnitude) and a direction. A vector is defined only by its length and direction. Two arrows represent the same vector if one is a parallel translation (shift) of the other. A vector is determined by giving the initial and terminal points of a representative, also called the tail and head of the vector. A vector, such as \\(\\overrightarrow{PQ}\\), is defined by the arrow with initial point \\(P\\) (tail) and terminal point \\(Q\\) (head).\n\nNote: The position of the arrow is not relevant.\n\n\\[\n\\overrightarrow{a} = \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n\\end{bmatrix}\n\\]\n\n\nThe sum of two vectors is calculated component-wise. The summation of vectors is commutative and associative, includes a neutral element (the zero vector), and can be inverted by its negative vector to result in the zero vector.\n\\[\n\\overrightarrow{a} + \\overrightarrow{b} = \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n\\end{bmatrix}\n+\n\\begin{bmatrix}\n4 \\\\\n-1 \\\\\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n5 \\\\\n-2 \\\\\n\\end{bmatrix}\n\\]\n\n\n\nThe difference of two vectors \\(\\overrightarrow{a}\\) and \\(\\overrightarrow{b}\\) is the sum of \\(\\overrightarrow{a}\\) and the opposite of \\(\\overrightarrow{b}\\).\n\\[\n\\overrightarrow{a} - \\overrightarrow{b} = \\overrightarrow{a} + (-\\overrightarrow{b})\n\\]\n\n\n\nScalar multiplication of a vector involves multiplying each component of the vector by a scalar (a real number). This changes the magnitude of the vector, keeping its direction the same if the scalar is positive or reversing it if the scalar is negative. Scalar multiplication of vectors is associative and distributive and includes a neutral element (the scalar 1).\n\\[\n\\dfrac{1}{2}(\\overrightarrow{a} + \\overrightarrow{b})\n=\n\\dfrac{1}{2}(\\begin{bmatrix}\n2 \\\\\n6 \\\\\n\\end{bmatrix}\n+\n\\begin{bmatrix}\n4 \\\\\n2 \\\\\n\\end{bmatrix})\n=\n\\begin{bmatrix}\n3 \\\\\n4 \\\\\n\\end{bmatrix}\n\\]\n\n\n\nThe magnitude (or norm) of a vector \\(\\overrightarrow{a}\\) is its length, and it is denoted by \\(|\\overrightarrow{a}|\\).\n\\[\n\\lvert \\vec{a} \\rvert = \\sqrt{a_x^2 + a_y^2}\n\\]\n\nNote: Length of vector is never negative: \\(\\lvert \\overrightarrow{a} \\rvert \\ge 0\\).\n\n\n\n\nThe vector with a norm of zero is denoted by \\(\\overrightarrow{0}\\). The length of the zero vector is \\(0\\).\n\\[\n|\\overrightarrow{0}| = 0\n\\]\n\nNote: A zero vector has no direction.\n\n\n\n\nThe opposite vector of \\(\\overrightarrow{a}\\) is a vector with the same norm but the opposite direction. It is denoted as \\(-\\overrightarrow{a}\\). In a representative, the initial and terminal points are reversed.\n\nNote: \\(\\overrightarrow{PQ} = -\\overrightarrow{QP}\\), but \\(\\overrightarrow{PQ} \\neq \\overrightarrow{QP}\\)\n\n\n\n\nA unit vector is a vector that has a magnitude of 1 and is often used to indicate direction.\n\\[\n\\lvert \\overrightarrow{e} \\rvert = 1\n\\]\n\n\n\nTwo vectors \\(\\overrightarrow{a}\\) and \\(\\overrightarrow{b}\\) are called collinear or linearly dependent, if:\n\\[\n\\overrightarrow{b} = r \\overrightarrow{a} \\quad \\text{for } r \\in \\mathbb{R}\n\\] \\[\ns \\overrightarrow{b} =  \\overrightarrow{a} \\quad \\text{for } s \\in \\mathbb{R}\n\\]\nMore generally: \\[\nr \\overrightarrow{a} + s \\overrightarrow{b} = \\overrightarrow{0} \\quad \\text{for } r, s \\in \\mathbb{R} \\quad \\text{with } r \\neq 0 \\quad \\text{or } s \\neq 0\n\\]\nThis will be used to generalize definition of linear independence.\n\n\n\nFor every non-zero vector \\(\\overrightarrow{a}\\), there is exactly one unit vector (\\(\\overrightarrow{e}_a\\)) with the same direction. This process is called normalizing a vector.\n\\[\n\\overrightarrow{e}_a = \\dfrac{1}{\\lvert \\overrightarrow{a} \\rvert}\\overrightarrow{a}\n\\]\n\n\n\n\\[\n\\overrightarrow{PQ}\n=\n\\begin{bmatrix}\nx_2 - x_1 \\\\\ny_2 - y_1 \\\\\n\\end{bmatrix}\n\\]\n\n\n\n\nA Cartesian coordinate system is one in which the axes are perpendicular and the units on each axis have the same length. The unit vectors along the axes are typically denoted by \\(\\overrightarrow{e}_x\\) and \\(\\overrightarrow{e}_y\\). Every vector in this system can be represented as a linear combination of these unit vectors.\n\\[\n\\overrightarrow{a} = a_x\\overrightarrow{e}_x + a_y\\overrightarrow{e}_y\n\\]\n\nNote: \\(a_x\\) and \\(a_y\\) are called scalar components of \\(\\overrightarrow{a}\\).\n\n\n\n\nVectors in 3D space have an additional component to represent the third dimension.\n\\[\n\\overrightarrow{a} = \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n2 \\\\\n\\end{bmatrix}\n\\]\n\nNote: The mathematical rules do not change by adding more dimensions."
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#vectors",
    "href": "hs25/lia1/lia1_notes.html#vectors",
    "title": "Linear Algebra 01",
    "section": "",
    "text": "A vector \\(\\overrightarrow{a}\\) is data of a number (or magnitude) and a direction. A vector is defined only by its length and direction. Two arrows represent the same vector if one is a parallel translation (shift) of the other. A vector is determined by giving the initial and terminal points of a representative, also called the tail and head of the vector. A vector, such as \\(\\overrightarrow{PQ}\\), is defined by the arrow with initial point \\(P\\) (tail) and terminal point \\(Q\\) (head).\n\nNote: The position of the arrow is not relevant.\n\n\\[\n\\overrightarrow{a} = \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n\\end{bmatrix}\n\\]\n\n\nThe sum of two vectors is calculated component-wise. The summation of vectors is commutative and associative, includes a neutral element (the zero vector), and can be inverted by its negative vector to result in the zero vector.\n\\[\n\\overrightarrow{a} + \\overrightarrow{b} = \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n\\end{bmatrix}\n+\n\\begin{bmatrix}\n4 \\\\\n-1 \\\\\n\\end{bmatrix}\n=\n\\begin{bmatrix}\n5 \\\\\n-2 \\\\\n\\end{bmatrix}\n\\]\n\n\n\nThe difference of two vectors \\(\\overrightarrow{a}\\) and \\(\\overrightarrow{b}\\) is the sum of \\(\\overrightarrow{a}\\) and the opposite of \\(\\overrightarrow{b}\\).\n\\[\n\\overrightarrow{a} - \\overrightarrow{b} = \\overrightarrow{a} + (-\\overrightarrow{b})\n\\]\n\n\n\nScalar multiplication of a vector involves multiplying each component of the vector by a scalar (a real number). This changes the magnitude of the vector, keeping its direction the same if the scalar is positive or reversing it if the scalar is negative. Scalar multiplication of vectors is associative and distributive and includes a neutral element (the scalar 1).\n\\[\n\\dfrac{1}{2}(\\overrightarrow{a} + \\overrightarrow{b})\n=\n\\dfrac{1}{2}(\\begin{bmatrix}\n2 \\\\\n6 \\\\\n\\end{bmatrix}\n+\n\\begin{bmatrix}\n4 \\\\\n2 \\\\\n\\end{bmatrix})\n=\n\\begin{bmatrix}\n3 \\\\\n4 \\\\\n\\end{bmatrix}\n\\]\n\n\n\nThe magnitude (or norm) of a vector \\(\\overrightarrow{a}\\) is its length, and it is denoted by \\(|\\overrightarrow{a}|\\).\n\\[\n\\lvert \\vec{a} \\rvert = \\sqrt{a_x^2 + a_y^2}\n\\]\n\nNote: Length of vector is never negative: \\(\\lvert \\overrightarrow{a} \\rvert \\ge 0\\).\n\n\n\n\nThe vector with a norm of zero is denoted by \\(\\overrightarrow{0}\\). The length of the zero vector is \\(0\\).\n\\[\n|\\overrightarrow{0}| = 0\n\\]\n\nNote: A zero vector has no direction.\n\n\n\n\nThe opposite vector of \\(\\overrightarrow{a}\\) is a vector with the same norm but the opposite direction. It is denoted as \\(-\\overrightarrow{a}\\). In a representative, the initial and terminal points are reversed.\n\nNote: \\(\\overrightarrow{PQ} = -\\overrightarrow{QP}\\), but \\(\\overrightarrow{PQ} \\neq \\overrightarrow{QP}\\)\n\n\n\n\nA unit vector is a vector that has a magnitude of 1 and is often used to indicate direction.\n\\[\n\\lvert \\overrightarrow{e} \\rvert = 1\n\\]\n\n\n\nTwo vectors \\(\\overrightarrow{a}\\) and \\(\\overrightarrow{b}\\) are called collinear or linearly dependent, if:\n\\[\n\\overrightarrow{b} = r \\overrightarrow{a} \\quad \\text{for } r \\in \\mathbb{R}\n\\] \\[\ns \\overrightarrow{b} =  \\overrightarrow{a} \\quad \\text{for } s \\in \\mathbb{R}\n\\]\nMore generally: \\[\nr \\overrightarrow{a} + s \\overrightarrow{b} = \\overrightarrow{0} \\quad \\text{for } r, s \\in \\mathbb{R} \\quad \\text{with } r \\neq 0 \\quad \\text{or } s \\neq 0\n\\]\nThis will be used to generalize definition of linear independence.\n\n\n\nFor every non-zero vector \\(\\overrightarrow{a}\\), there is exactly one unit vector (\\(\\overrightarrow{e}_a\\)) with the same direction. This process is called normalizing a vector.\n\\[\n\\overrightarrow{e}_a = \\dfrac{1}{\\lvert \\overrightarrow{a} \\rvert}\\overrightarrow{a}\n\\]\n\n\n\n\\[\n\\overrightarrow{PQ}\n=\n\\begin{bmatrix}\nx_2 - x_1 \\\\\ny_2 - y_1 \\\\\n\\end{bmatrix}\n\\]"
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#cartesian-coordinate-systems",
    "href": "hs25/lia1/lia1_notes.html#cartesian-coordinate-systems",
    "title": "Linear Algebra 01",
    "section": "",
    "text": "A Cartesian coordinate system is one in which the axes are perpendicular and the units on each axis have the same length. The unit vectors along the axes are typically denoted by \\(\\overrightarrow{e}_x\\) and \\(\\overrightarrow{e}_y\\). Every vector in this system can be represented as a linear combination of these unit vectors.\n\\[\n\\overrightarrow{a} = a_x\\overrightarrow{e}_x + a_y\\overrightarrow{e}_y\n\\]\n\nNote: \\(a_x\\) and \\(a_y\\) are called scalar components of \\(\\overrightarrow{a}\\)."
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#d-space",
    "href": "hs25/lia1/lia1_notes.html#d-space",
    "title": "Linear Algebra 01",
    "section": "",
    "text": "Vectors in 3D space have an additional component to represent the third dimension.\n\\[\n\\overrightarrow{a} = \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n2 \\\\\n\\end{bmatrix}\n\\]\n\nNote: The mathematical rules do not change by adding more dimensions."
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#non-linear-equations",
    "href": "hs25/lia1/lia1_notes.html#non-linear-equations",
    "title": "Linear Algebra 01",
    "section": "Non-Linear equations",
    "text": "Non-Linear equations\n\nProduct of two unknown variables: \\(x \\cdot y + 1 = x\\)\nTrigonometric terms: \\(3\\sin x + y = 0\\)\nFractions of unknown variables: \\(\\dfrac{1}{x} + y = 1\\)"
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#matrix-notifications",
    "href": "hs25/lia1/lia1_notes.html#matrix-notifications",
    "title": "Linear Algebra 01",
    "section": "Matrix Notifications",
    "text": "Matrix Notifications\nTo generalize determination of solutions of linear equations, we can use the matrix notification.\n\\[\n\\begin{multline}\n2x + 3y = 10 \\\\\nx - y = -5\n\\end{multline}\n\\]\nShort hand notation by writing down coefficients only.\n\\[\n\\begin{pmatrix}\n2 & 3 & | & 10 \\\\\n1 & -1 & | & -5\n\\end{pmatrix}\n\\]\n\nNote: Called coefficient matrix."
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#gaussian-elimination-method",
    "href": "hs25/lia1/lia1_notes.html#gaussian-elimination-method",
    "title": "Linear Algebra 01",
    "section": "Gaussian Elimination Method",
    "text": "Gaussian Elimination Method\nGoal of Gaussian elimination method is to apply sequence of elementary row operations in order to transform augmented matrix of a system into a matrix in row echelon form.\n\nNote: Echelon row form is not unique, since interchanging rows is allowed.\n\n\nBackward Substitution\nThe system of linear equations is written in a special type of matrix. Solution are easy to determine with so-called backward substitution.\n\\[\n\\begin{pmatrix}\n2 & 1 & 1 & | & 5 \\\\\n0 & 8 & 3 & | & 14 \\\\\n0 & 0 & 1 & | & 2\n\\end{pmatrix}\n\\]\n\n\nPivot element\nThe pivot element is a key element chosen at each step of an algorithm used to solve a system of linear equations.\n\nNote: The pivot element must be non-zero.\n\n\n\nTypes of Row Echelon Forms\n\nIn all rows and in all columns there is a pivot: System has unique solutions\nIn all rows there is a pivot, but not in all columns: Free variables, so system has infinitely many solutions.\nSome row has no pivot: System is inconsistent (no solutions)."
  },
  {
    "objectID": "hs25/lia1/lia1_notes.html#set-of-solutions",
    "href": "hs25/lia1/lia1_notes.html#set-of-solutions",
    "title": "Linear Algebra 01",
    "section": "Set of Solutions",
    "text": "Set of Solutions\nOften a free parameter is denoted by \\(t\\): \\(t = y\\)\n\\[\nL = \\left\\{ \\begin{bmatrix} 3 \\\\ 0 \\\\ 1 \\end{bmatrix} + t \\begin{bmatrix} -3 \\\\ 1 \\\\ 0 \\end{bmatrix} \\mid t \\in \\mathbb{R} \\right\\}\n\\]\n\nNote: \\(t\\) vary over whole set \\(\\mathbb{R}\\), i.e., from \\(-\\infty\\) to \\(\\infty\\)"
  },
  {
    "objectID": "hs25/csc/csc_notes.html",
    "href": "hs25/csc/csc_notes.html",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "",
    "text": "Data Science improves traditional productio nwith basic function by Digital services using Data Science driven functions. The result is a new poroduct type, for Example watch vs. smart watch. To do so, data has to be processec, visialized, tranferd storaged and used in a program."
  },
  {
    "objectID": "hs25/csc/csc_notes.html#how-can-data-science-improve-products-services",
    "href": "hs25/csc/csc_notes.html#how-can-data-science-improve-products-services",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "",
    "text": "Data Science improves traditional productio nwith basic function by Digital services using Data Science driven functions. The result is a new poroduct type, for Example watch vs. smart watch. To do so, data has to be processec, visialized, tranferd storaged and used in a program."
  },
  {
    "objectID": "hs25/csc/csc_notes.html#fundaments-of-computer-networks",
    "href": "hs25/csc/csc_notes.html#fundaments-of-computer-networks",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "Fundaments of Computer Networks",
    "text": "Fundaments of Computer Networks\nA computer network is build of several components:\n\nConeccted devises: Hosts (end stystems).\nCommunications linsk: Wired and wireless.\nProtocols: Sending and receiving data.\nPacket switches: routers and switches.\n\n\nExample Net\n\n\n\nEnterprise Network"
  },
  {
    "objectID": "hs25/csc/csc_notes.html#packet-switching",
    "href": "hs25/csc/csc_notes.html#packet-switching",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "Packet Switching",
    "text": "Packet Switching\nThe Host dates applicatins messages and breaks them into smaller chunks (aka. packets) of length \\(L\\) bits. The packets are transmitted into access network at rate \\(R\\), called link capacity/bandwith.\n\nPackaet Transmission Delay\n\n\\(L\\): Packet lenght (bits).\n\\(R\\): Link bandwith (dps).\n\n\\[\nd_{\\text{trans}} = \\dfrac{L \\quad \\text{(bits)}}{R \\quad \\text{(bits/sec)}}\n\\]\n\n\nPropagation delay\n\n\\(d\\): Length of physical link.\n\\(s\\): Propagation speed in medium.\n\n\\[\nd_{\\text{prop}} = \\dfrac{d}{s}\n\\]\n\n\nRate\nRate (bits/time unit) at which bits transferred between sender/receiver. We disquinsh between:\n\nInstantaneous: Rate at given point in time.\nAverage: Rate over longer period of time."
  },
  {
    "objectID": "hs25/csc/csc_notes.html#protocol-layers",
    "href": "hs25/csc/csc_notes.html#protocol-layers",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "Protocol Layers",
    "text": "Protocol Layers\nProtocols define format, order of msgs sent and received among network entities, and actions taken on msg transmission, receipt.\n\nApplications: FTP, SMTP, HTTP.\nTransport: TCP, UDP.\nNetwork: IP, routing protocols.\nLink: Ethernet, WiFi.\nPhysical: Ethernet, WiFi."
  },
  {
    "objectID": "hs25/csc/csc_notes.html#addressing-in-computer-networks",
    "href": "hs25/csc/csc_notes.html#addressing-in-computer-networks",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "Addressing in Computer Networks",
    "text": "Addressing in Computer Networks\n\nDomain Name System\nTranslates domain names to numerical IP addresses.\n\nDNS Recursor (Client Side): Initiates the query. It’s the first stop and acts as a librarian trying to find the IP address.\nRoot Nameserver (The Dot ‘.’): The starting point. It directs the Recursor to the correct Top-Level Domain (TLD) Nameserver.\nTLD Nameserver (e.g., .com, .de, .org): Manages all domains under its specific extension. It points the Recursor to the Authoritative Nameserver for the specific domain requested.\nAuthoritative Nameserver: Holds the definitive DNS records (A, CNAME, MX, etc.) for the requested domain. It provides the actual IP address back to the Recursor.\nDNS Recursor / Client: Receives the IP address and finally connects to the web server to load the website.\n\n\n\nIP Addressing\nEach device is assigned a unique IP address build up by Net ID + Host ID"
  },
  {
    "objectID": "hs25/csc/csc_notes.html#switch",
    "href": "hs25/csc/csc_notes.html#switch",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "Switch",
    "text": "Switch\nA network switch is a central component in almost every wired network, especially in local area networks (LANs). It acts as an intelligent distribution station for data traffic. Based on incoming frames switch “learns” location of sender. Records sender/location pair in switch table.\n\nNote: Layer 2 – Data Link Layer"
  },
  {
    "objectID": "hs25/csc/csc_notes.html#router",
    "href": "hs25/csc/csc_notes.html#router",
    "title": "Comuter Science Concepts for Data Science - Notes",
    "section": "Router",
    "text": "Router\nA router is a network device that forwards data packets between different networks. It ensures that information (e.g. a website, video or email) reaches the recipient from the sender – even if it has to pass through many intermediate stations.\n\nNote: Layer 3 – Network Layer"
  },
  {
    "objectID": "hs25/sa/sa_notes.html",
    "href": "hs25/sa/sa_notes.html",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "",
    "text": "Statistic is the discipline that concerns collection, organisation, analysis, interpretation, and presentation of data. Applied statistics applies to real everyday problems.\n\nNote: There is no cooking recipes how to solve problems."
  },
  {
    "objectID": "hs25/sa/sa_notes.html#one-dimensional",
    "href": "hs25/sa/sa_notes.html#one-dimensional",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "One-Dimensional",
    "text": "One-Dimensional\nList are the simplest kind od datasets. Lists are heterogeneous data structures."
  },
  {
    "objectID": "hs25/sa/sa_notes.html#two-dimentinal",
    "href": "hs25/sa/sa_notes.html#two-dimentinal",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Two-Dimentinal",
    "text": "Two-Dimentinal\nTabels are the most common form of datasets"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#location-parameters",
    "href": "hs25/sa/sa_notes.html#location-parameters",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Location parameters",
    "text": "Location parameters\n\nArithemtic mean (average)\nMedian\nQuantil"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#spread-parameters",
    "href": "hs25/sa/sa_notes.html#spread-parameters",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Spread parameters",
    "text": "Spread parameters\n\nEmpirical variance\nStadnard deviation\nInterquantile range"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#artithmetic-mean",
    "href": "hs25/sa/sa_notes.html#artithmetic-mean",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Artithmetic Mean",
    "text": "Artithmetic Mean\nMean tells a lot about a dataset: “Center” of data. But average does not tell whole story about (quantitative) datasets. Datasets can have a different spread around mean.\n\\[\n\\bar{x} = \\dfrac{x_1 + x_2 + \\dots{} + x_n}{n} = \\dfrac{1}{n}\\sum^n_{i=1}x_i\n\\]\n\nx &lt;- c(4.3, 5.2, 2.7, 3.1)\nmean(x)\n\n[1] 3.825\n\n\n\nNote: The arithmetic mean is not robust to outliers."
  },
  {
    "objectID": "hs25/sa/sa_notes.html#empirical-variancehave",
    "href": "hs25/sa/sa_notes.html#empirical-variancehave",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Empirical Variancehave",
    "text": "Empirical Variancehave\nThe value of empirical variance has no physical interpretation.\n\\[\nVar(x) = \\dfrac{(x_1-\\bar{x})² + (x_2-\\bar{x})² + \\dots + (x_n-\\bar{x})² }{n-1} = \\dfrac{1}{n-1}\\sum^n_{i=1}(x_i - \\bar{x}²)\n\\]\n\nx &lt;- c(4.3, 5.2, 2.7, 3.1)\nvar(x)\n\n[1] 1.3025"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#standard-deviation",
    "href": "hs25/sa/sa_notes.html#standard-deviation",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Standard Deviation",
    "text": "Standard Deviation\nStandard deviation is root of variance. Standard deviation has same unit as data itself.\n\\[\ns_x = \\sqrt{Var(x)} = \\sqrt{\\dfrac{1}{n-1}\\sum^n_{i=1}(x_i - \\bar{x}²)}\n\\]\n\nx &lt;- c(4.3, 5.2, 2.7, 3.1)\nsd(x)\n\n[1] 1.141271"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#median",
    "href": "hs25/sa/sa_notes.html#median",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Median",
    "text": "Median\nAlso called central value or average value. Median is much less influenced by extreme observations than mean.\n\nx &lt;- c(4.3, 5.2, 2.7, 3.1)\nmedian(x)\n\n[1] 3.7\n\n\n\nNote: Consider Mean and Median simultaneously instead of choosing one."
  },
  {
    "objectID": "hs25/sa/sa_notes.html#quantiles",
    "href": "hs25/sa/sa_notes.html#quantiles",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Quantiles",
    "text": "Quantiles\nQuantiles are values that divide a dataset into equal parts, allowing for the analysis of the distribution of data. Common types of quantiles include quartiles which split data into four parts.\n\nNote: Most of the time there is no exact 25 % of observations.\n\n\nx &lt;- c(4.3, 5.2, 2.7, 3.1)\nquantile(x) # Default quartil\n\n   0%   25%   50%   75%  100% \n2.700 3.000 3.700 4.525 5.200 \n\nquantile(x, p = 0.7) # Individual value\n\n 70% \n4.39"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#boxplot",
    "href": "hs25/sa/sa_notes.html#boxplot",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Boxplot",
    "text": "Boxplot\n\n\n\nBoxplot: Schematically\n\n\n\nBox: Height is bounded by the lower and upper quartiles. The height of the box is the interquartile range.\nHorizontal line in box: Median\nWhisker: \\(1.5 \\times \\text{IQR}\\), defined by inventor John Tukey.\nPoints: Outliers\n\n\nNote: The upper and lower whiskers do not have to be \\(1.5 \\times \\text{IQR}\\) in length.\n\n\n# Single boxplot\nset.seed(42) # Set seed for reproducibility\nx &lt;- rnorm(10) # Generate 10 random samples\n\nboxplot(x) # Plot data\n\n\n\n\n\n\n\n\n\n# Compare two sample groups\nset.seed(42)\nx &lt;- rnorm(100)\ny &lt;- rnorm(100)\n\nboxplot(x, y)"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#histogram",
    "href": "hs25/sa/sa_notes.html#histogram",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Histogram",
    "text": "Histogram\nGraphical overview of occurring values. Draw a bar for each class, with the height proportional to the number of observations in that class.\n\n# Simple histogram\nset.seed(42)\nx &lt;- rnorm(1000)\n\nhist(x)\n\n\n\n\n\n\n\n\nThe selection of the number of classes is relevant for the interpretation of a histogram.\n\n# Big breaks\nset.seed(42)\nx &lt;- rnorm(1000)\n\nhist(x, breaks=5)\n\n\n\n\n\n\n\n\n\n# Small breaks\nset.seed(42)\nx &lt;- rnorm(1000)\n\nhist(x, breaks=50)\n\n\n\n\n\n\n\n\n\nNote: Since we used set.seed(42), both plots show the same data.\n\n\nSkweness of Hostograms\nHistograms can have a skewness depending on the data.\n\n# Right skewed data\nset.seed(42)\nx &lt;- rexp(1000, rate = 1) # Using expontial distribution\n\nhist(x, breaks=50)\n\n\n\n\n\n\n\n\n\n# Left left data\nset.seed(42)\nx &lt;- rexp(1000, rate = 1)\nx &lt;- -x # Trun data positivity\n\nhist(x, breaks=50)\n\n\n\n\n\n\n\n\n\nNote: The terms “right” and “left” always refer to the direction where there is less data (the tail of the distribution)."
  },
  {
    "objectID": "hs25/sa/sa_notes.html#normalised-histograms",
    "href": "hs25/sa/sa_notes.html#normalised-histograms",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Normalised Histograms",
    "text": "Normalised Histograms\nSelect the bar height such that the bar area corresponds to the proportion of respective observations in the total number of observations.\n\nNote: Density values are not percentages.\n\n\n# Normalized histogram\nset.seed(42)\nx &lt;- rnorm(1000)\n\nhist(x, freq=FALSE) # Disable frequency"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#boxplot-x-histogram",
    "href": "hs25/sa/sa_notes.html#boxplot-x-histogram",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Boxplot X Histogram",
    "text": "Boxplot X Histogram\n\n\n\nBoxplot X Histogram"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#probability-model",
    "href": "hs25/sa/sa_notes.html#probability-model",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Probability Model",
    "text": "Probability Model\nProbability models use set theory as a language. For random experiments, the outcome is not predictable. A probability model consists of events that are possible in such an experiment and probabilities for different results occurring. Probability models have the following components:\n\nSample space \\(\\Omega\\): Contains all possible elementary events \\(\\omega\\).\nEvents \\(A, B, C\\): Subsets of the sample space.\nProbabilities \\(p\\) associated with events \\(A, B, C\\).\nEvent: More general and more important than elementary events, but consists of them.\n\nProbability formula:\n\\[\np(E)=\\dfrac{\\lvert E \\rvert}{\\lvert \\Omega \\rvert} \\text{, where } E \\subseteq \\Omega\n\\]"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#set-theory",
    "href": "hs25/sa/sa_notes.html#set-theory",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Set Theory",
    "text": "Set Theory\n\nUnion: \\(A \\cup B\\)\nIntersection: \\(A \\cap B\\)\nComplement: \\(\\bar{A}\\)\nDifference: \\(A \\setminus B\\)\n\n\n\n\nSet theory"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#axioms-of-probability",
    "href": "hs25/sa/sa_notes.html#axioms-of-probability",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Axioms of Probability",
    "text": "Axioms of Probability\nEach event \\(A\\) probability \\(P(A)\\) is assigned, with properties:\n\n\\(p(A) \\geq 0\\)\n\\(p(\\Omega) = 1\\)\n\\(p(A \\cup B) = p(A) + p(B) \\text{, if } A \\cap B = \\emptyset\\)\n\n\nNote: Kolmogorov Axioms of Probability"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#laws-for-calculating-probabilities",
    "href": "hs25/sa/sa_notes.html#laws-for-calculating-probabilities",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Laws for Calculating Probabilities",
    "text": "Laws for Calculating Probabilities\nIf \\(A, B\\) and \\(A_1, \\dots, A_n\\) events, then:\n\n\\(p(\\bar{A}) = 1 - p(A) \\text{, for all } A\\)\n\\(p(A \\cup B) = p(A) + p(B) - p(A \\cap B) \\text{, for all } A \\text{ and } B\\)\n\\(p(A_1 \\cup \\dots A_n) \\leq p(A_1) + \\dots + p(A_n) \\text{, for all } A_1, \\dots, A_n\\)\n\\(p(B) \\leq p(A) \\text{, for all } A \\text{ and } B \\text{ with } B \\subseteq A\\)\n\\(p(A \\setminus B) = p(A) - p(B) \\text{, for all } A \\text{ and } B \\text{ with } B \\subseteq A\\)"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#discrete-probability-models",
    "href": "hs25/sa/sa_notes.html#discrete-probability-models",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Discrete Probability Models",
    "text": "Discrete Probability Models\nA sample space can be finite or infinite and discrete. It can also be infinite but still discrete.\n\nProbabilities for Discrete Models\nThe probability of event \\(A = {\\omega_1, \\omega_2, \\dots, \\omega_n}\\) is determined by the sum of the probabilities \\(p(\\omega)\\) of the corresponding elementary events.\n\\[\np(A) = \\sum_{\\omega_i \\in A} p(\\omega_i)\n\\]"
  },
  {
    "objectID": "hs25/sa/sa_notes.html#laplace-model",
    "href": "hs25/sa/sa_notes.html#laplace-model",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Laplace Model",
    "text": "Laplace Model\nProbabilities of all elementary elements add up to 1.\n\\[\np(E) = \\dfrac{f}{p} = \\sum_{k:\\omega_i \\in E} p(\\omega_k)\n\\]\nDivides number of “favorable” elementary events by number of “possible” elementary events."
  },
  {
    "objectID": "hs25/sa/sa_notes.html#stochastic-independence",
    "href": "hs25/sa/sa_notes.html#stochastic-independence",
    "title": "Classical and Bayesian Statistics - Notes",
    "section": "Stochastic Independence",
    "text": "Stochastic Independence\nIf events \\(A\\) and \\(B\\) are stochastically independent, then:\n\\[\nP(A \\cap B) = P(A) \\cdot P(B)\n\\]\n\nNote: Formula applies only if events A and B are stochastically independent.\n\nOutcome of event A has no influence on outcome of event B and vice versa."
  },
  {
    "objectID": "hs25/pds/pds_notes.html",
    "href": "hs25/pds/pds_notes.html",
    "title": "Python for Data Science - Notes",
    "section": "",
    "text": "An interpreter translates code and sends it to the CPU. The code is sent to the interpreter line by line. The interpreter provides a console for ad-hoc commands. It’s usually slower than a compiler and not good for optimization.\nA compiler processes source code and returns an executable file. Compiler languages are usually fast and made for optimization (speed, storage use). Executable code is almost impossible to reverse-engineer."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#interpreter-vs.-compiler-languages",
    "href": "hs25/pds/pds_notes.html#interpreter-vs.-compiler-languages",
    "title": "Python for Data Science - Notes",
    "section": "",
    "text": "An interpreter translates code and sends it to the CPU. The code is sent to the interpreter line by line. The interpreter provides a console for ad-hoc commands. It’s usually slower than a compiler and not good for optimization.\nA compiler processes source code and returns an executable file. Compiler languages are usually fast and made for optimization (speed, storage use). Executable code is almost impossible to reverse-engineer."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#python-console-vs.-script",
    "href": "hs25/pds/pds_notes.html#python-console-vs.-script",
    "title": "Python for Data Science - Notes",
    "section": "Python console vs. script",
    "text": "Python console vs. script\nThe Python console is a direct interface to the interpreter. Every instruction is sent sequentially to the interpreter. Commands sent in the console are sent directly to the interpreter.\nA Python script is a collection of commands. Executing a Python script means sending all the commands it contains consecutively to the interpreter."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#virtual-enviroments-venv",
    "href": "hs25/pds/pds_notes.html#virtual-enviroments-venv",
    "title": "Python for Data Science - Notes",
    "section": "Virtual enviroments (venv)",
    "text": "Virtual enviroments (venv)\nTo avoid dependency issues of packages and keep the development environment clean, developers programme applications in virtual environments.\nPython3 -m venv .venv # Standard name\n\nNote: It is best practice to name the virtual environment .venv to hide it in the file system.\n\nYou need to activate the virtual environment.\n. .venv/bin/activate # For Linux\nYou can install packages into the venv with python3-pip."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#variabels-and-basic-data-types",
    "href": "hs25/pds/pds_notes.html#variabels-and-basic-data-types",
    "title": "Python for Data Science - Notes",
    "section": "Variabels and Basic data types",
    "text": "Variabels and Basic data types\nA variable is a name that refers to a particular or undefined value. In programming languages, we use them as a reference to a particular storage location. A variable always consists of a name, a data type, a storage location and a value. Python does not require any type for variable definitions. It assumes the type from the value.\n\nNote: Variable names are usually written in lowercase.\n\nBasic data types:\n\nInteger (int)\nString (str)\nBoolean (bool).\nList\nDictionary"
  },
  {
    "objectID": "hs25/pds/pds_notes.html#mathematical-operations",
    "href": "hs25/pds/pds_notes.html#mathematical-operations",
    "title": "Python for Data Science - Notes",
    "section": "Mathematical Operations",
    "text": "Mathematical Operations\nDepending on the context, two particular mathematical operators can have different meanings. The sum operator (\\(+\\)), except for numerical values, means appending one element to another. This usually requires two elements of the same data type. The multiplication operation (\\(*\\)) always has to be applied with an integer.\n\nNote: Sum and multiplication can be used with strings."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#boolean-operations",
    "href": "hs25/pds/pds_notes.html#boolean-operations",
    "title": "Python for Data Science - Notes",
    "section": "Boolean operations",
    "text": "Boolean operations\nTwo Boolean values can be combined in different ways using the keywords and, or and xor. Any Boolean operation can be inverted using the keyword not."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#bitwise-operations",
    "href": "hs25/pds/pds_notes.html#bitwise-operations",
    "title": "Python for Data Science - Notes",
    "section": "Bitwise operations",
    "text": "Bitwise operations\nBitwise operations in Python are used to manipulate individual bits of integer values.\n\nx | y bitwise or of x and y\nx ^ y bitwise exclusive or of x and y\nx & y bitwise and of x and y\nx &lt;&lt; n x shifted left by n bits\nx &gt;&gt; n x shifted right by n bits\n~x the bits of x inverted"
  },
  {
    "objectID": "hs25/pds/pds_notes.html#comparison-operations",
    "href": "hs25/pds/pds_notes.html#comparison-operations",
    "title": "Python for Data Science - Notes",
    "section": "Comparison operations",
    "text": "Comparison operations\n\n&lt; strictly less than\n&lt;= less than or equal\n&gt; strictly greater than\n&gt;= greater than or equal\n== equal\n!= not equal\nis object identity\nis not negated object identity\n\n\nNote: Comparisons can be chained arbitrarily."
  },
  {
    "objectID": "hs25/pds/pds_notes.html#single-block",
    "href": "hs25/pds/pds_notes.html#single-block",
    "title": "Python for Data Science - Notes",
    "section": "Single block",
    "text": "Single block\ninstruction\ninstruction\nblock header:\n••••block instruction\n••••block instruction\n••••block instruction\ninstruction\ninstruction"
  },
  {
    "objectID": "hs25/pds/pds_notes.html#nested-blocks",
    "href": "hs25/pds/pds_notes.html#nested-blocks",
    "title": "Python for Data Science - Notes",
    "section": "Nested blocks",
    "text": "Nested blocks\ninstruction\ninstruction\nblock 1 header:\n••••block 1 instruction\n••••block 2 header:\n••••••••block 2 instruction\n••••••••block 2 instruction\n••••block 1 instruction\n••••block 1 instruction\ninstruction"
  },
  {
    "objectID": "hs25/pds/pds_notes.html#elif-concatenation",
    "href": "hs25/pds/pds_notes.html#elif-concatenation",
    "title": "Python for Data Science - Notes",
    "section": "Elif concatenation",
    "text": "Elif concatenation\nelif allows for concatenating multiple conditions.\n\nx = 6\n\nif x == 10:\n    print(\"x has the value 10\")\nelif x % 2 == 0:\n    print(\"x is an even number\")\n\nx is an even number"
  },
  {
    "objectID": "hs25/pds/pds_notes.html#shorthand-statement",
    "href": "hs25/pds/pds_notes.html#shorthand-statement",
    "title": "Python for Data Science - Notes",
    "section": "Shorthand statement",
    "text": "Shorthand statement\nShorthand if statements allow for less code and better readability.\n\nx = 10\n\n# Block\nif x == 10:\n    x += 1\n    print(x)\nelse:\n    None\n\n## Is the same as\n\nx = 10\n# One Line\nx = x + 1 if x == 10 else None\nprint(x)\n\n11\n11"
  },
  {
    "objectID": "hs25/doe/doe_notes.html",
    "href": "hs25/doe/doe_notes.html",
    "title": "Design of Experiments",
    "section": "",
    "text": "The fundamental difference between observational studies and experimental research designs is that in the former, researchers simply observe and measure variables without actively intervening. In the latter, variables are purposefully manipulated to determine a cause-and-effect relationship.\n\n\n\nThe effect and aim of randomisation is to eliminate selection bias and confounding factors, and to ensure comparability between groups at the start of the study (baseline data).\n\n\n\nConfounding occurs when a factor (confounder) that has not been investigated is associated with both the independent and dependent variables, causing a spurious correlation between them.\n\n\n\nThe problem is distortion due to knowledge about the treatment. Blinding is a suitable technique for avoiding such distortions. It eliminates conscious and unconscious influences on the treatment result.\n\n\n\nOpen: No blining\nSingle-blind: Participants don’t know their group assignment (e.g., whether they’re receiving the real treatment or a placebo).\nDouble-blind: Neither the participants nor the researchers administering the treatment know the group assignments.\nTriple-blind: Participants, researchers, and the data analysts are all unaware of the group assignments."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#observational-vs.-experimental",
    "href": "hs25/doe/doe_notes.html#observational-vs.-experimental",
    "title": "Design of Experiments",
    "section": "",
    "text": "The fundamental difference between observational studies and experimental research designs is that in the former, researchers simply observe and measure variables without actively intervening. In the latter, variables are purposefully manipulated to determine a cause-and-effect relationship."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#randomization",
    "href": "hs25/doe/doe_notes.html#randomization",
    "title": "Design of Experiments",
    "section": "",
    "text": "The effect and aim of randomisation is to eliminate selection bias and confounding factors, and to ensure comparability between groups at the start of the study (baseline data)."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#confounder",
    "href": "hs25/doe/doe_notes.html#confounder",
    "title": "Design of Experiments",
    "section": "",
    "text": "Confounding occurs when a factor (confounder) that has not been investigated is associated with both the independent and dependent variables, causing a spurious correlation between them."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#blinding",
    "href": "hs25/doe/doe_notes.html#blinding",
    "title": "Design of Experiments",
    "section": "",
    "text": "The problem is distortion due to knowledge about the treatment. Blinding is a suitable technique for avoiding such distortions. It eliminates conscious and unconscious influences on the treatment result.\n\n\n\nOpen: No blining\nSingle-blind: Participants don’t know their group assignment (e.g., whether they’re receiving the real treatment or a placebo).\nDouble-blind: Neither the participants nor the researchers administering the treatment know the group assignments.\nTriple-blind: Participants, researchers, and the data analysts are all unaware of the group assignments."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#introduction-to-scientific-theory",
    "href": "hs25/doe/doe_notes.html#introduction-to-scientific-theory",
    "title": "Design of Experiments",
    "section": "Introduction to scientific theory",
    "text": "Introduction to scientific theory\n\nScientific Theory\nExamines whether and how scientific knowledge can be obtained. It is a branch of philosophy that deals with the theory of scientific knowledge and scientific methods, as well as with research. It also analyzes the practices that generate scientific knowledge and examines the institutional and social contexts in which these take place.\n\n\nMethodology\nIt focuses on the underlying considerations, decisions, and justifications of the approach used in scientific research projects. It provides the instructional framework on how to proceed in order to gain scientific knowledge. It does not comprise a strictly formal set of rules but offers a diverse and pragmatic set of choices that are linked to human action.\n\n\nResearch Methodes\nSystematized procedures and approaches for obtaining knowledge.\n\n\nSelection of positions held in scientific theory\n\nClassical rationalism: Reason precedes experience and there are so-called “innate” concepts of reason.\nInductive empiricism: Findings are derived inductively based on observations and experiences.\nLogical positivism: The use of logic makes it possible to separate science from metaphysics.\nCritical rationalism: Findings are derived deductively based on observations.\n(Social) constructivism: Individuals construct their reality by relating their thinking and actions.\n\n\nNote: Inductive empiricism and critical rationalism belong to empirical research.\n\n\n\nWhat is empirical research?\nKnowledge can be gained only through observation, experiment, and experience. Empirical research examines the environment by means of observation and experiment. There are many research methods for conducting observations and experiments:\n\nInterview\nCase study\nSurvey study\nExperiment\n\n\n\nLandscape of empirical research\n\n\n\nLandscape of empirical research\n\n\n\n\nQuantitative Methodes\nResearch that uses quantitative methods is designed around the principles of critical rationalism. The approach assumes that a theory can never be finally verified, it can only be falsified.\n\n\nDescriptive statistics\n\nDescribes the data to be analyzed.\nIs limited to a sample as a subset of the population.\nDoes not allow for conclusions to be drawn about the population.\n\n\n\nInferential statistics\n\nFor drawing conclusions about the population based on information obtained from a sample.\nUse statistical hypothesis tests, especially, as the main component.\n\n\n\nHypothesis Testing\nHypothesis testing is a statistical method used to determine if there is enough evidence in a sample of data to support a specific hypothesis about a population. It involves formulating a null hypothesis and an alternative hypothesis, analyzing sample data, and making a decision based on the results, often using a p-value to assess significance.\n\nAlternative hypothesis (\\(H_A\\)): Research hypothesis to be tested that postulates the presence of a certain effect (e.g. a difference) in the population.\nNull hypothesis (\\(H_0\\)): Postulates the opposite, namely the absence of an effect."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#research-process",
    "href": "hs25/doe/doe_notes.html#research-process",
    "title": "Design of Experiments",
    "section": "Research process",
    "text": "Research process\n\nPhases\n\nFormulation of the research problem & study design\nPlanning and preparation of the study\nData collection\nData Analysis\nReporting\n\n\n\nMeasuring Instrument\nA process that uses a given set of circumstances to define and specify subsequent research steps with a view to better understanding these circumstances.\n\n\nSampling procedure\nA selection of cases derived from the population and compiled for research purposes results in statements as part of an empirical study. Sampling often involves people, but objects of all kinds (e.g., websites, newspaper articles, companies, countries) can also form a population. Sample surveys are typical of empirical social research. Only rarely are censuses used that examine all cases associated with the population."
  },
  {
    "objectID": "hs25/doe/doe_notes.html#definition-properties-of-study-design",
    "href": "hs25/doe/doe_notes.html#definition-properties-of-study-design",
    "title": "Design of Experiments",
    "section": "Definition & properties of study design",
    "text": "Definition & properties of study design\nThe choice of a suitable research design determines the scientific quality of a study. The planning of the analysis depends on the research design.\n\nStudy types\n\nDescriptive study: Descriptive character. Suitable for forming hypotheses (Surveys).\nAnalytical study: Identification and quantification of effects / verification of relationships. Not fully suitable for hypothesis testing (Cohot).\nRandomized controlled: Suitable for hypothesis testing (RCT)."
  },
  {
    "objectID": "hs25/pds/pds_exercises.html",
    "href": "hs25/pds/pds_exercises.html",
    "title": "Python for Data Science - Exercises",
    "section": "",
    "text": "print(f\"10 + 10 + 10 = {10 + 10 + 10}\")\nprint(f\"10 - 3       = {10 - 3}\")\nprint(f\"10 * 2       = {10 * 2}\")\nprint(f\"5 / 2        = {5 / 2}\")\nprint(f\"5.0 / 2      = {5.0 / 2}\")\nprint(f\"5 % 2        = {5 % 2}\")\nprint(f\"10 % 3       = {10 % 3}\")\nprint(f\"3 ** 3       = {3 ** 3}\")\nprint(f\"9 ** 0.5     = {9 ** 0.5}\")\nprint(f\"10 + 3 * 3   = {10 + 3 * 3}\")\nprint(f\"(10 + 3) * 3 = {(10 + 3) * 3}\")\n\n10 + 10 + 10 = 30\n10 - 3       = 7\n10 * 2       = 20\n5 / 2        = 2.5\n5.0 / 2      = 2.5\n5 % 2        = 1\n10 % 3       = 1\n3 ** 3       = 27\n9 ** 0.5     = 3.0\n10 + 3 * 3   = 19\n(10 + 3) * 3 = 39\n\n\n\n\n\n\na = 23\nb = 23\nprint(f\"a = {a}\")\nprint(f\"The ID of a is {id(a)}\") # Prints memory address of the variable a\nprint(f\"a is of type {type(a)}\") # Prints the data type of the variable a\n\na = 23\nThe ID of a is 11761384\na is of type &lt;class 'int'&gt;\n\n\n\nNote: id() corresponds to the objects memory address during its lifetime.\n\n\nprint(f\"b = {b}\")\nprint(f\"The ID of b is {id(b)}\")\nprint(f\"b is of type {type(a)}\")\n\nb = 23\nThe ID of b is 11761384\nb is of type &lt;class 'int'&gt;\n\n\n\n\n\n\na = 123 # Reassign var a to int 123\nprint(f\"a = {a}\")\nprint(f\"The ID of a is {id(a)}\")\nprint(f\"a is of type {type(a)}\")\n\na = 123\nThe ID of a is 11764584\na is of type &lt;class 'int'&gt;\n\n\n\n\n\n\nc = 23\nprint(f\"c = {c}\")\nprint(f\"The ID of a is {id(c)}\")\nprint(f\"c is of type {type(c)}\")\n\nc = 23\nThe ID of a is 11761384\nc is of type &lt;class 'int'&gt;\n\n\nWe assign the variable c to the value 23 and check its data type and memory location.\n\n\n\n\nd = 3.142\nprint(f\"d = {d}\")\nprint(f\"The ID of a is {id(d)}\")\nprint(f\"d is of type {type(d)}\")\n\nd = 3.142\nThe ID of a is 126190363122960\nd is of type &lt;class 'float'&gt;\n\n\n\n\n\n\nprint (\"HSLU's Python course is cool\")\n\nprint(\"This is Line 1\")\nprint(\"This is Line 2\")\n\nprint(\"\\nWhat does the \\\\n control character do? Are you sure?\") # \\n is a line break\n\nprint(\"\\tWhat does the \\\\t control character do? Are you sure?\") # \\t is a tabulator\n\nprint(\"I want to learn python because....\")\nprint(\"\\n\\n\\t....it's a cool data science programming language. Ok - there are also others ;-) !\")\n\nprint(\"What \" + \"is \" + \"wrong?\" + \"\\nAdd some space between the words without removing the '+' signs!\") # Add spaces after the string\n\nHSLU's Python course is cool\nThis is Line 1\nThis is Line 2\n\nWhat does the \\n control character do? Are you sure?\n    What does the \\t control character do? Are you sure?\nI want to learn python because....\n\n\n    ....it's a cool data science programming language. Ok - there are also others ;-) !\nWhat is wrong?\nAdd some space between the words without removing the '+' signs!\n\n\n\n\n\n\ng=h='hslu'      # Assign the var g and h to the string \"hslu\"\nprint(g)        # Prints hslu\nprint(h)        # Print hslu\nh=456           # Reassign h to int 456\nprint(h)        # Prints 456\nh=h+1           # Calculates 456 + 1 = 457\nprint(h)        # Prints 457\nh+=1            # Calculates 457 + 1 = 458\nprint(h)        # Prints 458\np='hslu'        # Assign the var p to the string \"hslu\"\nq=p             # Copies the var p (hlsu) to the var q\nprint(p==q)     # Compare the var p and q (Output: True)\nprint(p is q)   # Compare the var p and q (Output: True)\n\nhslu\nhslu\n456\n457\n458\nTrue\nTrue"
  },
  {
    "objectID": "hs25/pds/pds_exercises.html#exercises-1",
    "href": "hs25/pds/pds_exercises.html#exercises-1",
    "title": "Python for Data Science - Exercises",
    "section": "",
    "text": "print(f\"10 + 10 + 10 = {10 + 10 + 10}\")\nprint(f\"10 - 3       = {10 - 3}\")\nprint(f\"10 * 2       = {10 * 2}\")\nprint(f\"5 / 2        = {5 / 2}\")\nprint(f\"5.0 / 2      = {5.0 / 2}\")\nprint(f\"5 % 2        = {5 % 2}\")\nprint(f\"10 % 3       = {10 % 3}\")\nprint(f\"3 ** 3       = {3 ** 3}\")\nprint(f\"9 ** 0.5     = {9 ** 0.5}\")\nprint(f\"10 + 3 * 3   = {10 + 3 * 3}\")\nprint(f\"(10 + 3) * 3 = {(10 + 3) * 3}\")\n\n10 + 10 + 10 = 30\n10 - 3       = 7\n10 * 2       = 20\n5 / 2        = 2.5\n5.0 / 2      = 2.5\n5 % 2        = 1\n10 % 3       = 1\n3 ** 3       = 27\n9 ** 0.5     = 3.0\n10 + 3 * 3   = 19\n(10 + 3) * 3 = 39\n\n\n\n\n\n\na = 23\nb = 23\nprint(f\"a = {a}\")\nprint(f\"The ID of a is {id(a)}\") # Prints memory address of the variable a\nprint(f\"a is of type {type(a)}\") # Prints the data type of the variable a\n\na = 23\nThe ID of a is 11761384\na is of type &lt;class 'int'&gt;\n\n\n\nNote: id() corresponds to the objects memory address during its lifetime.\n\n\nprint(f\"b = {b}\")\nprint(f\"The ID of b is {id(b)}\")\nprint(f\"b is of type {type(a)}\")\n\nb = 23\nThe ID of b is 11761384\nb is of type &lt;class 'int'&gt;\n\n\n\n\n\n\na = 123 # Reassign var a to int 123\nprint(f\"a = {a}\")\nprint(f\"The ID of a is {id(a)}\")\nprint(f\"a is of type {type(a)}\")\n\na = 123\nThe ID of a is 11764584\na is of type &lt;class 'int'&gt;\n\n\n\n\n\n\nc = 23\nprint(f\"c = {c}\")\nprint(f\"The ID of a is {id(c)}\")\nprint(f\"c is of type {type(c)}\")\n\nc = 23\nThe ID of a is 11761384\nc is of type &lt;class 'int'&gt;\n\n\nWe assign the variable c to the value 23 and check its data type and memory location.\n\n\n\n\nd = 3.142\nprint(f\"d = {d}\")\nprint(f\"The ID of a is {id(d)}\")\nprint(f\"d is of type {type(d)}\")\n\nd = 3.142\nThe ID of a is 126190363122960\nd is of type &lt;class 'float'&gt;\n\n\n\n\n\n\nprint (\"HSLU's Python course is cool\")\n\nprint(\"This is Line 1\")\nprint(\"This is Line 2\")\n\nprint(\"\\nWhat does the \\\\n control character do? Are you sure?\") # \\n is a line break\n\nprint(\"\\tWhat does the \\\\t control character do? Are you sure?\") # \\t is a tabulator\n\nprint(\"I want to learn python because....\")\nprint(\"\\n\\n\\t....it's a cool data science programming language. Ok - there are also others ;-) !\")\n\nprint(\"What \" + \"is \" + \"wrong?\" + \"\\nAdd some space between the words without removing the '+' signs!\") # Add spaces after the string\n\nHSLU's Python course is cool\nThis is Line 1\nThis is Line 2\n\nWhat does the \\n control character do? Are you sure?\n    What does the \\t control character do? Are you sure?\nI want to learn python because....\n\n\n    ....it's a cool data science programming language. Ok - there are also others ;-) !\nWhat is wrong?\nAdd some space between the words without removing the '+' signs!\n\n\n\n\n\n\ng=h='hslu'      # Assign the var g and h to the string \"hslu\"\nprint(g)        # Prints hslu\nprint(h)        # Print hslu\nh=456           # Reassign h to int 456\nprint(h)        # Prints 456\nh=h+1           # Calculates 456 + 1 = 457\nprint(h)        # Prints 457\nh+=1            # Calculates 457 + 1 = 458\nprint(h)        # Prints 458\np='hslu'        # Assign the var p to the string \"hslu\"\nq=p             # Copies the var p (hlsu) to the var q\nprint(p==q)     # Compare the var p and q (Output: True)\nprint(p is q)   # Compare the var p and q (Output: True)\n\nhslu\nhslu\n456\n457\n458\nTrue\nTrue"
  },
  {
    "objectID": "hs25/pds/pds_exercises.html#task-1",
    "href": "hs25/pds/pds_exercises.html#task-1",
    "title": "Python for Data Science - Exercises",
    "section": "Task 1",
    "text": "Task 1\nCreate a simple program in which three whole numbers (potentially negative!) are read in from the keyboard and afterwards get displayed on the screen in ascending order. Use nested if-statements for order determination (i.e. no built-in- ‘sort’ function).\n\nUsing if-else-statements\n\ninputs = [] # Set up storage\n\nprint(\"Please input 3 whole numbers of your choise.\")\n\"\"\"\ninput1 = int(input(\"Number one: \")) # Assign input to a variable\ninput2 = int(input(\"Number two: \"))\ninput3 = int(input(\"Number tree: \"))\n\"\"\"\n\n# Use fake user inputs\ninput1 = -3\ninput2 = 10\ninput3 = -6\n\n# Sort list\nif input1 &lt; input2 and input1 &lt; input3:\n    inputs.append(input1) # Append input to list\n    if input2 &lt; input3:\n        inputs.append(input2)\n        inputs.append(input3)\n    else:\n        inputs.append(input3)\n        inputs.append(input2)\nelif input2 &lt; input1 and input2 &lt; input3:\n    inputs.append(input2)\n    if input1 &lt; input3:\n        inputs.append(input1)\n        inputs.append(input3)\n    else:\n        inputs.append(input3)\n        inputs.append(input1)\nelif input3 &lt; input1 and input3 &lt; input2:\n    inputs.append(input3)\n    if input1 &lt; input2:\n        inputs.append(input1)\n        inputs.append(input2)\n    else:\n        inputs.append(input2)\n        inputs.append(input1)\n\nprint(inputs)\n\nPlease input 3 whole numbers of your choise.\n[-6, -3, 10]\n\n\n\n\nUsing build in function sorted()\n\ninputs = [] # Set up storage\n\nprint(\"Please input 3 whole numbers of your choise.\")\n\"\"\"\ninput1 = int(input(\"Number one: \")) # Assign input to a variable\ninputs.append(input1)\ninput2 = int(input(\"Number two: \"))\ninputs.append(input2)\ninput3 = int(input(\"Number tree: \"))\ninputs.append(input3)\n\"\"\"\n\n# Use fake user inputs\ninput1 = -3\ninputs.append(input1)\ninput2 = 10\ninputs.append(input2)\ninput3 = -6\ninputs.append(input3)\n\n# Sort list\ninputs = sorted(inputs)\nprint(inputs)\n\nPlease input 3 whole numbers of your choise.\n[-6, -3, 10]"
  },
  {
    "objectID": "hs25/pds/pds_exercises.html#task-2",
    "href": "hs25/pds/pds_exercises.html#task-2",
    "title": "Python for Data Science - Exercises",
    "section": "Task 2",
    "text": "Task 2\n\na\nAssumption: The int variables a, b and c are declared and initialized.\nDefine a conditional expression “EXPR” in such a way that the body of the expression\nif EXPR: print(“condition fulfilled”)\nis only carried out if: a is greater than b OR a is less than half of b OR the sum of a and c is greater than b.\nCheck your result: a=1, b=2, c=2 -&gt; True a=1, b=2, c=1 -&gt; False\n\n# Test case one\na = 1\nb = 2\nc = 2\n\nif a &gt; b or a &lt; b/2 or sum([a, c]) &gt; b:\n    print(\"condition fulfilled\")\nelse:\n    print(\"condition not fulfilled\")\n\ncondition fulfilled\n\n\n\n# Test case two\na = 1\nb = 2\nc = 1\n\nif a &gt; b or a &lt; b/2 or sum([a, c]) &gt; b:\n    print(\"condition fulfilled\")\nelse:\n    print(\"condition not fulfilled\")\n\ncondition not fulfilled\n\n\n\n\nb\nAssumption: The int variables a, b and c are declared and initialized.\nDefine a conditional expression “EXPR” in such a way that the body of the expression\nif EXPR: print(“condition fulfilled”)\nis only carried out if: half of the number a is an odd number OR the subtraction of the numbers b and c results in an even number OR both a and b and also b and c have different values.\nCheck your result: a=6, b=2, c=0 =&gt; True a=5, b=2, c=1 =&gt; True a=5, b=5, c=2 =&gt; False\n\n# Test case one\na = 6\nb = 2\nc = 0\n\nif a/2 % 2 == 1 or b - c % 2 == 0 or a != b and b != c:\n        print(\"condition fulfilled\")\nelse:\n    print(\"condition not fulfilled\")\n\ncondition fulfilled\n\n\n\n# Test case two\n# Test case one\na = 5\nb = 2\nc = 1\n\nif a/2 % 2 == 1 or b - c % 2 == 0 or a != b and b != c:\n        print(\"condition fulfilled\")\nelse:\n    print(\"condition not fulfilled\")\n\ncondition fulfilled\n\n\n\n# Test case three\n# Test case one\na = 5\nb = 5\nc = 2\n\nif a/2 % 2 == 1 or b - c % 2 == 0 or a != b and b != c:\n        print(\"condition fulfilled\")\nelse:\n    print(\"condition not fulfilled\")\n\ncondition not fulfilled"
  },
  {
    "objectID": "hs25/sa/sa_exercises.html",
    "href": "hs25/sa/sa_exercises.html",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "",
    "text": "It seems that, in total, the Allied and Axis countries had about the same number of civilian deaths. However, if we compare the numbers per party member, we see that the Axis countries had a higher average amount of deaths. On the other hand, the data from the Allies is inconsistent (see Denmark).\n\n\n\nThe percentages in the chart do not sum up to 100%.\n\n\n\n\n\nWe can assume that Linda is a bank teller and is active in the feminist movement. Her experiences from the past could have influenced her behavior and thinking on certain topics. She may have a sense for justice and equality, regardless of the topic.\n\n\n\nWe can assume that Steve is a librarian because of his helpful personality and his need for order and structure, much like what’s found in a library. His passion for details may also be connected to a desire for knowledge.\n\n\n\nA Ball costs $0.05.\n\n\n\nThere are more death by heart diseases than accidents.\n\n\n\n\nSince the engine is the only thing that keeps a plane in the air, it makes sense for it to be more armoured than the rest of the plane. Even if other parts have more bullet holes on average (e.g. the fuselage), the plane could still fly."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#a",
    "href": "hs25/sa/sa_exercises.html#a",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "",
    "text": "It seems that, in total, the Allied and Axis countries had about the same number of civilian deaths. However, if we compare the numbers per party member, we see that the Axis countries had a higher average amount of deaths. On the other hand, the data from the Allies is inconsistent (see Denmark)."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#b",
    "href": "hs25/sa/sa_exercises.html#b",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "",
    "text": "The percentages in the chart do not sum up to 100%."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#c",
    "href": "hs25/sa/sa_exercises.html#c",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "",
    "text": "We can assume that Linda is a bank teller and is active in the feminist movement. Her experiences from the past could have influenced her behavior and thinking on certain topics. She may have a sense for justice and equality, regardless of the topic.\n\n\n\nWe can assume that Steve is a librarian because of his helpful personality and his need for order and structure, much like what’s found in a library. His passion for details may also be connected to a desire for knowledge.\n\n\n\nA Ball costs $0.05.\n\n\n\nThere are more death by heart diseases than accidents."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#d",
    "href": "hs25/sa/sa_exercises.html#d",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "",
    "text": "Since the engine is the only thing that keeps a plane in the air, it makes sense for it to be more armoured than the rest of the plane. Even if other parts have more bullet holes on average (e.g. the fuselage), the plane could still fly."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-1.3",
    "href": "hs25/sa/sa_exercises.html#problem-1.3",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 1.3",
    "text": "Problem 1.3\n\ngrades &lt;- c(4.2, 2.3, 5.6, 4.5, 4.8, 3.9, 5.9, 2.4, 5.9, 6, 4, 3.7, 5, 5.2, 4.5, 3.6, 5, 6, 2.8, 3.3, 5.5, 4.2, 4.9, 5.1)\n\ngrades &lt;- sort(grades) # Sort values\n\noriginal_mu &lt;- mean(grades)\noriginla_meadian &lt;- median(grades)\n\ngrades[9:11] &lt;- 1 # Reassign values\nnew_mu &lt;- mean(grades)\nnew_median &lt;- median(grades)\n\ncat(\"Original vs. New mean:\", original_mu, \"vs.\", new_mu, \"\\n\") # Add line break\n\nOriginal vs. New mean: 4.5125 vs. 4.1 \n\ncat(\"Median stays the same:\", originla_meadian, \"=\", new_median)\n\nMedian stays the same: 4.65 = 4.65"
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#probmel-2.1",
    "href": "hs25/sa/sa_exercises.html#probmel-2.1",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Probmel 2.1",
    "text": "Probmel 2.1\n\na\n\n# Read data\ndata &lt;- read.csv('/home/nils/dev/mscids-notes/hs25/sa/data/husband_wife.csv')\nhead(data)\n\n  age.husband height.husband age.wife height.wife\n1          49            180       43         159\n2          25            184       28         156\n3          40            165       30         162\n4          52            177       57         154\n5          58            161       52         142\n6          32            169       27         166\n\n\n\n\nb\n\nsummary(data)\n\n  age.husband    height.husband     age.wife      height.wife   \n Min.   :20.00   Min.   :155.0   Min.   :18.00   Min.   :141.0  \n 1st Qu.:33.00   1st Qu.:169.0   1st Qu.:32.00   1st Qu.:156.0  \n Median :43.50   Median :172.0   Median :41.00   Median :160.0  \n Mean   :42.92   Mean   :172.8   Mean   :40.68   Mean   :160.3  \n 3rd Qu.:53.00   3rd Qu.:177.0   3rd Qu.:50.00   3rd Qu.:165.0  \n Max.   :64.00   Max.   :190.0   Max.   :64.00   Max.   :176.0  \n\n\nFor each column, we see a brief summary with quantitative and qualitative information about the data.\n\n\nc\n\nage_diff &lt;- data$age.husband - data$age.wife # Calc age difference\n\nboxplot(age_diff)\n\n\n\n\n\n\n\n\n\n\nd\n\nThe median of age_diff is about 2.5. On average, the age difference between husbands and wives is around 2.5 years.\n50% of the differences lie between approximately 0 and 5 years.\nThere are more upper than lower outliers, meaning that extreme cases where the husband is much older than the wife occur more frequently.\nIn addition, the values of the upper outliers are larger than those of the lower ones."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-2.2",
    "href": "hs25/sa/sa_exercises.html#problem-2.2",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 2.2",
    "text": "Problem 2.2\n\nhead(InsectSprays) # Preview data from head\n\n  count spray\n1    10     A\n2     7     A\n3    20     A\n4    14     A\n5    14     A\n6    12     A\n\n\n\na\n\ntapply(InsectSprays$count, InsectSprays$spray, mean)\n\n        A         B         C         D         E         F \n14.500000 15.333333  2.083333  4.916667  3.500000 16.666667 \n\n\n\n\nb\n\nboxplot(count ~ spray,\n        data = InsectSprays)"
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-2.3",
    "href": "hs25/sa/sa_exercises.html#problem-2.3",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 2.3",
    "text": "Problem 2.3\n\ndata &lt;- read.csv('/home/nils/dev/mscids-notes/hs25/sa/data/Diet.csv')\nhead(data)\n\n  Person gender Age Height pre.weight Diet weight6weeks\n1     25     NA  41    171         60    2         60.0\n2     26     NA  32    174        103    2        103.0\n3      1      0  22    159         58    1         54.2\n4      2      0  46    192         60    1         54.0\n5      3      0  55    170         64    1         63.3\n6      4      0  33    171         64    1         61.1\n\n\n\n# Add column weight.los\ndata$weight.loss &lt;- data$weight6weeks - data$pre.weight\ndata$weight.loss\n\n [1]  0.0  0.0 -3.8 -6.0 -0.7 -2.9 -2.8 -2.0 -2.0 -8.5 -1.9 -3.1 -1.5 -3.0 -3.6\n[16] -0.9  2.1 -2.0 -1.7 -4.3 -7.0 -0.6 -2.7 -3.6 -3.0 -2.0 -4.2 -4.7 -3.3  0.5\n[31] -7.0 -5.6 -3.4 -6.8 -7.8 -5.4 -6.8 -7.2 -7.0 -7.3 -0.9 -7.6 -4.1 -6.3 -5.0\n[46]  0.6 -1.1 -4.5 -4.1 -9.0 -2.4 -3.9 -3.5 -5.1 -3.5 -4.2 -2.4 -5.8 -3.5 -5.3\n[61] -1.7 -5.4 -6.1 -7.9  1.4 -4.3 -2.5 -0.9 -3.5 -0.5 -2.8 -8.6 -4.5 -2.8 -4.1\n[76] -5.3 -9.2 -6.1\n\n\n\ntapply(data$weight.loss, data$Diet, mean)\n\n        1         2         3 \n-3.300000 -3.025926 -5.148148 \n\n\nAccording to the data, diet 3 appears to have the greatest effect on weight loss over the 6-week therapy period. Diets 1 and 2 show more or less the same effect, although patients following diet 2 lost slightly less weight on average.\n\nboxplot(data$weight.loss ~ data$Diet)\n\n\n\n\n\n\n\n\n\nEven though diet 3 appears to have the greatest effect according to the median, it also has the largest interquartile range (IQR) among the three diets.\nDiet 2 shows the greatest overall spread across the entire boxplot\nDiet 1 is influenced by several lower outliers."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-2.4",
    "href": "hs25/sa/sa_exercises.html#problem-2.4",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 2.4",
    "text": "Problem 2.4\n\na\nThe probabilities of ‘heads’ and ‘tails’ do not add up to 1.\n\n\nb\nThe calculated probability is negative. That’s not possible by definition.\n\n\nc\nThe union of the quantities S and M cannot be 0.7, because men cannot be pregnant."
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-2.5",
    "href": "hs25/sa/sa_exercises.html#problem-2.5",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 2.5",
    "text": "Problem 2.5\n\na\nSample space of the experiment:\n\\[\n\\Omega = \\{ (i, j) \\mid i, j \\in \\{1,2,3,4,5,6\\} \\}\n\\]\n\n\nb\n\\[\np(\\omega_n) = \\dfrac{1}{36} = 0.02\\bar{7}\n\\]\n\n\nc\nEvents, where the sum is 7:\n\\[\nE_1 = {(1, 6), (2, 5), (3, 4)}\n\\]\n\nNote: Since there are two dices, we can multiply the number of favourable results by 2.\n\nNow, we can calculate the probability:\n\\[\np(E_1) = \\dfrac{6}{36} = 0.1\\bar{6}\n\\]\n\n\nd\n\\[\nE_2 = {(1, 1), (1, 2), (2, 1)}\n\\]\n\\[\np(E_2) = \\dfrac{3}{36} = 0.08\\bar{3}\n\\]\n\n\ne\n\\[\nE_3 = \\{ (i, j) \\mid i, j \\in \\{1,3,5\\} \\}\n\\]\n\\[\np(E_3) = \\dfrac{9}{36} = 0.25\n\\]\n\n\nf\n\np_e2 &lt;- 3/36\np_e3 &lt;- 9/36\np_intersection &lt;- 1/36\n\np_annual &lt;- p_e2 + p_e3 - p_intersection\n\nprint(p_annual)\n\n[1] 0.3055556"
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-2.6",
    "href": "hs25/sa/sa_exercises.html#problem-2.6",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 2.6",
    "text": "Problem 2.6\n\np_A &lt;- 3/4\np_B &lt;- 2/3\n\n\na\n\np_bothEvents &lt;- p_A * p_B\nprint(p_bothEvents)\n\n[1] 0.5\n\n\n\n\nb\n\np_atLeastOne &lt;- p_A + p_B - p_A * p_B\nprint(p_atLeastOne)\n\n[1] 0.9166667\n\n\n\n\nc\n\np_atMostOne &lt;- 1 - p_A * p_B\n\ncat(p_atMostOne)\n\n0.5\n\n\n\n\nd\n\np_noEvent &lt;- 1 - (p_A + p_B - p_A * p_B)\nprint(p_noEvent)\n\n[1] 0.08333333\n\n\n\n\ne\n\np_exactlyOneEvent &lt;- p_A + p_B - 2 * p_A * p_B\nprint(p_exactlyOneEvent)\n\n[1] 0.4166667"
  },
  {
    "objectID": "hs25/sa/sa_exercises.html#problem-2.7",
    "href": "hs25/sa/sa_exercises.html#problem-2.7",
    "title": "Classical and Bayesian Statistics - Exercises",
    "section": "Problem 2.7",
    "text": "Problem 2.7\n\np_earthquake &lt;- 0.04\np_typhoon &lt;- 0.08\n\np_annual &lt;- p_earthquake + p_typhoon - p_earthquake * p_typhoon\n\nprint(p_annual)\n\n[1] 0.1168"
  },
  {
    "objectID": "hs25/csc/csc_exercises.html",
    "href": "hs25/csc/csc_exercises.html",
    "title": "Computer Science Concepts for Data Scientists - Exercises",
    "section": "",
    "text": "Format: IIIIIIII.FFFF (8 bits integer, 4 bits fraction)\nExample: 45.375\n\n\n\nMethod: Repeatedly divide by 2 & note the remainder.\nCalculation:\n\n45 / 2 = 22 Remainder 1\n22 / 2 = 11 Remainder 0\n11 / 2 = 5 Remainder 1\n5 / 2  = 2 Remainder 1\n2 / 2  = 1 Remainder 0\n1 / 2  = 0 Remainder 1\n\nResult (read remainders from bottom to top): 101101\nPad to 8 bits (on the left): 00101101\n\n\n\n\n\nMethod: Repeatedly multiply by 2 & note the integer part.\nCalculation:\n\n0.375 * 2 = 0.75 -&gt; 0\n0.75  * 2 = 1.5 -&gt; 1\n0.5   * 2 = 1.0 -&gt; 1\n\nResult (read digits from top to bottom): 011\nPad to 4 bits (on the right): 0110\n\n\n\n\n\nInteger: 00101101\nFraction: 0110\nFinal (12-Bit): 001011010110\n\n\n\n\nNot every fraction can be represented exactly.\nInteger 2 -&gt; 00000010\nFraction 0.3 -&gt; 0.010011... (repeating)\nTruncated to 4 bits: 0100 (which represents 0.25)\nFinal result for 2.3: 000000100100 (represents 2.25)"
  },
  {
    "objectID": "hs25/csc/csc_exercises.html#exercise-1-internet-delays-and-routes",
    "href": "hs25/csc/csc_exercises.html#exercise-1-internet-delays-and-routes",
    "title": "Computer Science Concepts for Data Scientists - Exercises",
    "section": "Exercise 1: Internet Delays and Routes",
    "text": "Exercise 1: Internet Delays and Routes\n\na\nTraceroute is a command line tool for determining the transport route of IP data packets between your own computer and a selected remote station.\ntraceroute gaia.cs.umass.edu\n\n\nb\nThe number of routers along the path depends on the network route and topology — for example, whether a VPN or proxy is used, but not on the local access medium (WiFi vs. Ethernet)."
  },
  {
    "objectID": "hs25/csc/csc_exercises.html#exercise-2-internet-delays",
    "href": "hs25/csc/csc_exercises.html#exercise-2-internet-delays",
    "title": "Computer Science Concepts for Data Scientists - Exercises",
    "section": "Exercise 2: Internet Delays",
    "text": "Exercise 2: Internet Delays\n\na\n\\[\n\\text{file} = 4\\text{MB} = 4000\\text{bytes} = 32000\\text{bites}\n\\]\n\\[\nR_s = 1\\text{Mbit/sec} = \\dfrac{32000}{1000} = 32\\text{sec}\n\\]"
  },
  {
    "objectID": "hs25/csc/csc_exercises.html#exercise-3-domains-hosts-and-urls",
    "href": "hs25/csc/csc_exercises.html#exercise-3-domains-hosts-and-urls",
    "title": "Computer Science Concepts for Data Scientists - Exercises",
    "section": "Exercise 3: Domains, Hosts and URLs",
    "text": "Exercise 3: Domains, Hosts and URLs\n\n\n\n\n\nflowchart TD\n    A(Root) --&gt; B(edu)\n    B --&gt; C[umass]\n    C --&gt; E(cs)\n    F[gaia]\n    D[www]\n\n    %% Subgraph trick\n    subgraph row1[ ]\n        direction LR\n        C\n        D\n    end\n\n    %% Subgraph trick\n    subgraph row2[ ]\n        direction LR\n        E\n        F\n    end"
  },
  {
    "objectID": "hs25/csc/csc_exercises.html#exercise-4-http-protocol",
    "href": "hs25/csc/csc_exercises.html#exercise-4-http-protocol",
    "title": "Computer Science Concepts for Data Scientists - Exercises",
    "section": "Exercise 4: http Protocol",
    "text": "Exercise 4: http Protocol\nWhenever a user downloads a new web page a copy is saved on the local web server (cache). If the same page is requested again later by the same or another user AND it is still valid (i.e., the expiration date has not yet been reached), the page does not have to be fetched again from the remote web server."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "mscids-notes",
    "section": "",
    "text": "Hey there, fellow students! 👋\nHere you’ll find a collection of my personal notes and solutions from our courses. I’ve decided to put them online in the hopes that they might help some of you out.\n\nQuick Heads-Up! 📝\nJust a friendly reminder: everything you see here is based on my own understanding and approach. That means my solutions might be different from the official ones provided by our professors.\nThink of this as a secondary resource to complement your own work, not as an official answer key.\n\n\nDisclaimer 🚨\nWhile I do my best, I can’t guarantee that everything is 100% correct or complete. I’m just a student trying to figure things out, same as you. Therefore, I’m not taking any responsibility for the accuracy of the content. Always double-check with official course materials!\n\n\nSpotted a Mistake? 👀\nIf you happen to find an error, I’d be super grateful if you could let me know. Just shoot me a quick email!\n📧 nils.rechberger@stud.hslu.ch\nHappy studying! 🚀"
  }
]